{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/kk/Documents/GitHub/kasa/lib/firebase.ts"],"sourcesContent":["// lib/firebase.ts\nimport { initializeApp, getApps, getApp } from \"firebase/app\"\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\"\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY!,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN!,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID!,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET!,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID!,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID!,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID!,\n}\n\n// Eğer app zaten init edildiyse yeniden başlatma\nconst app = getApps().length ? getApp() : initializeApp(firebaseConfig)\n\nexport const auth = getAuth(app)\nexport const googleProvider = new GoogleAuthProvider()\nexport const db = getFirestore(app)\nexport const storage = getStorage(app)"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;;;;;AAOR;AANV;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,iDAAiD;AACjD,MAAM,MAAM,IAAA,8KAAO,IAAG,MAAM,GAAG,IAAA,6KAAM,MAAK,IAAA,oLAAa,EAAC;AAEjD,MAAM,OAAO,IAAA,wKAAO,EAAC;AACrB,MAAM,iBAAiB,IAAI,mLAAkB;AAC7C,MAAM,KAAK,IAAA,kLAAY,EAAC;AACxB,MAAM,UAAU,IAAA,8KAAU,EAAC","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/kk/Documents/GitHub/kasa/app/test/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { db } from \"@/lib/firebase\"\nimport { collection, getDocs } from \"firebase/firestore\"\nimport { useEffect } from \"react\"\n\nexport default function TestPage() {\n  useEffect(() => {\n    async function fetchData() {\n      const snap = await getDocs(collection(db, \"groups\"))\n      console.log(\"Groups:\", snap.docs.map((d) => d.id))\n    }\n    fetchData()\n  }, [])\n\n  return <div>✅ Firebase bağlantısı test ediliyor... Console’a bak!</div>\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,IAAA,0KAAS;8BAAC;YACR,eAAe;gBACb,MAAM,OAAO,MAAM,IAAA,6KAAO,EAAC,IAAA,gLAAU,EAAC,wHAAE,EAAE;gBAC1C,QAAQ,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,GAAG;oDAAC,CAAC,IAAM,EAAE,EAAE;;YAClD;YACA;QACF;6BAAG,EAAE;IAEL,qBAAO,6LAAC;kBAAI;;;;;;AACd;GAVwB;KAAA","debugId":null}}]
}